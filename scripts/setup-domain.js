#!/usr/bin/env node

/**
 * Script d'aide pour configurer un domaine personnalis√©
 * D√©velopp√© par Patrick Essomba - +237 694 788 215
 */

const readline = require('readline')

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
})

function ask(question) {
  return new Promise((resolve) => {
    rl.question(question, resolve)
  })
}

async function main() {
  console.log('\nüåê === CONFIGURATION DOMAINE TRIOMPHE ===\n')
  
  try {
    // R√©cup√©rer le domaine
    const domain = await ask('üìù Entrez votre domaine (ex: monsite.com): ')
    
    if (!domain || !domain.includes('.')) {
      console.log('‚ùå Domaine invalide')
      process.exit(1)
    }

    console.log('\nüìã === R√âSUM√â CONFIGURATION ===')
    console.log(`üåê Domaine: ${domain}`)
    console.log(`üåê WWW: www.${domain}`)
    console.log(`üîí SSL: Automatique (Let's Encrypt)`)
    
    console.log('\n‚öôÔ∏è === ENREGISTREMENTS DNS REQUIS ===')
    console.log('Configurez ces enregistrements chez votre registraire:\n')
    
    console.log('üìå ENREGISTREMENT A (Domaine principal):')
    console.log(`   Type: A`)
    console.log(`   Nom: @ (ou racine)`)
    console.log(`   Valeur: 76.76.19.61`)
    console.log(`   TTL: 3600\n`)
    
    console.log('üìå ENREGISTREMENT CNAME (Sous-domaine www):')
    console.log(`   Type: CNAME`)
    console.log(`   Nom: www`)
    console.log(`   Valeur: cname.vercel-dns.com`)
    console.log(`   TTL: 3600\n`)
    
    console.log('üöÄ === √âTAPES VERCEL ===')
    console.log('1. Allez sur https://vercel.com/dashboard')
    console.log('2. Projet ‚Üí Settings ‚Üí Domains')
    console.log(`3. Add Domain: ${domain}`)
    console.log('4. Suivez les instructions Vercel\n')
    
    console.log('üîß === VARIABLES D\'ENVIRONNEMENT ===')
    console.log('Dans Vercel Settings ‚Üí Environment Variables:\n')
    console.log(`NEXT_PUBLIC_SITE_URL=https://${domain}`)
    console.log(`NEXT_PUBLIC_AUTH_CALLBACK_URL=https://${domain}/auth/callback\n`)
    
    console.log('üì± === SUPABASE AUTH ===')
    console.log('Dans Supabase Authentication ‚Üí URL Configuration:\n')
    console.log(`Site URL: https://${domain}`)
    console.log(`Redirect URLs:`)
    console.log(`  - https://${domain}/auth/callback`)
    console.log(`  - https://www.${domain}/auth/callback\n`)
    
    console.log('‚è±Ô∏è === PROPAGATION DNS ===')
    console.log('‚Ä¢ Temps: 15 minutes √† 48h')
    console.log('‚Ä¢ Test: https://dnschecker.org')
    console.log(`‚Ä¢ Commande: dig +short ${domain}\n`)
    
    console.log('‚úÖ === TESTS FINAUX ===')
    console.log(`‚Ä¢ https://${domain} ‚Üí Site accessible`)
    console.log(`‚Ä¢ https://www.${domain} ‚Üí Redirection`)
    console.log(`‚Ä¢ https://${domain}/admin ‚Üí Dashboard`)
    console.log('‚Ä¢ SSL valide (cadenas vert)\n')
    
    const deploy = await ask('üöÄ Voulez-vous red√©ployer maintenant ? (y/N): ')
    
    if (deploy.toLowerCase() === 'y' || deploy.toLowerCase() === 'yes') {
      console.log('\nüì¶ Red√©ploiement en cours...')
      console.log('Utilisez: git add . && git commit -m "Setup domain config" && git push')
      console.log('Ou utilisez: ./scripts/deploy-vercel.sh\n')
    }
    
    console.log(`üéâ Configuration g√©n√©r√©e pour: ${domain}`)
    console.log('üìñ Consultez DOMAINE-GUIDE.md pour plus de d√©tails')
    console.log('\nüìû Support: Patrick Essomba - +237 694 788 215')
    
  } catch (error) {
    console.error('‚ùå Erreur:', error.message)
  } finally {
    rl.close()
  }
}

// V√©rification de propagation DNS
function checkDNS(domain) {
  const { spawn } = require('child_process')
  
  console.log(`\nüîç V√©rification DNS pour ${domain}...`)
  
  const dig = spawn('dig', ['+short', domain])
  
  dig.stdout.on('data', (data) => {
    const ip = data.toString().trim()
    if (ip === '76.76.19.61') {
      console.log('‚úÖ DNS configur√© correctement!')
    } else if (ip) {
      console.log(`‚ö†Ô∏è  DNS pointe vers: ${ip} (attendu: 76.76.19.61)`)
    } else {
      console.log('‚ùå Aucun enregistrement DNS trouv√©')
    }
  })
  
  dig.stderr.on('data', (data) => {
    console.log('‚ÑπÔ∏è  V√©rifiez manuellement sur https://dnschecker.org')
  })
}

// Lancer le script
if (require.main === module) {
  main().catch(console.error)
}

module.exports = { checkDNS }
